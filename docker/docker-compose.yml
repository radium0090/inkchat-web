version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  phpmyadmin:
    driver: ${VOLUMES_DRIVER}
  elasticsearch:
    driver: ${VOLUMES_DRIVER}

services:

  ### Web Server Container #################################

  web:
    build:
      context: ./../
      dockerfile: "./docker/nginx/${ENV}/Dockerfile"
      args:
        - http_proxy
        - https_proxy
        - no_proxy
        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
        - ENV=${ENV}
        - NGINX_VERSION=${NGINX_VERSION}
        - PHP_UPSTREAM_CONTAINER=${WEB_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${WEB_PHP_UPSTREAM_PORT}
        - WEB_SERVER_HTTP_PORT=${WEB_SERVER_HTTP_PORT}
        - WEB_SERVER_HTTPS_PORT=${WEB_SERVER_HTTPS_PORT}
    environment:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
    volumes:
      # Source Code
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      # Logs
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx${APP_CODE_CONTAINER_FLAG}
      # Config Files
      - ./config/${COMPOSE_PROJECT_NAME}/common/nginx/nginx.conf:/etc/nginx/nginx.conf${APP_CODE_CONTAINER_FLAG}
      - ./config/${COMPOSE_PROJECT_NAME}/common/nginx/sites/:/etc/nginx/sites-available${APP_CODE_CONTAINER_FLAG}
      - ./config/${COMPOSE_PROJECT_NAME}/common/nginx/ssl/:/etc/nginx/ssl${APP_CODE_CONTAINER_FLAG}
    ports:
      - "${WEB_SERVER_HTTP_PORT}:${WEB_SERVER_HTTP_PORT}"
      - "${WEB_SERVER_HTTPS_PORT}:${WEB_SERVER_HTTPS_PORT}"
    restart: "no"
    deploy:
      resources:
        limits:
          memory: ${WEB_SERVER_MEMORY_LIMIT}
    depends_on:
      - php-fpm
      - backend
      - mysql
      - redis
      - phpmyadmin
      - composer
    networks:
      - frontend
      - backend

  ### PHP-FPM Container #######################################

  php-fpm:
    build:
      context: ./../
      dockerfile: "./docker/php-fpm/${ENV}/Dockerfile"
      args:
        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_SMTP=${PHP_FPM_INSTALL_SMTP}
        - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
        - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
        - SMTP_HOST=${PHP_FPM_SMTP_HOST}
        - SMTP_PORT=${PHP_FPM_SMTP_PORT}
        - TZ=${TIMEZONE}
    environment:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2375
    volumes:
      # Source Code
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      # Config Files
      - ./config/${COMPOSE_PROJECT_NAME}/common/php-fpm/php.ini:/usr/local/etc/php/php.ini${APP_CODE_CONTAINER_FLAG}
    expose:
      - "9000"
    restart: "no"
    deploy:
      resources:
        limits:
          memory: ${PHP_FPM_MEMORY_LIMIT}
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend
    links:
      - docker-in-docker

  ### MySQL Container #########################################

  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
      dockerfile: "Dockerfile"
    environment:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${COMPOSE_PROJECT_NAME}
      - MYSQL_PASSWORD=${COMPOSE_PROJECT_NAME}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql${APP_CODE_CONTAINER_FLAG}
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d${APP_CODE_CONTAINER_FLAG}
    deploy:
      resources:
        limits:
          memory: ${MYSQL_MEMORY_LIMIT}
    ports:
      - "${MYSQL_PORT}:3306"
    restart: "no"
    networks:
      - backend

  ### Backend Utilities Container ###########################

  backend:
    build:
      context: ./../
      dockerfile: "./docker/backend/${ENV}/Dockerfile"
      args:
        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
        - COMPOSER_GLOBAL_INSTALL=${BACKEND_COMPOSER_GLOBAL_INSTALL}
        - COMPOSER_REPO_PACKAGIST=${BACKEND_COMPOSER_REPO_PACKAGIST}
        - ENV=${ENV}
        - INSTALL_AWSCLI=${BACKEND_INSTALL_AWSCLI}
        - INSTALL_MYSQL_CLIENT=${BACKEND_INSTALL_MYSQL_CLIENT}
        - INSTALL_NODE=${BACKEND_INSTALL_NODE}
        - INSTALL_PHPREDIS=${BACKEND_INSTALL_PHPREDIS}
        - INSTALL_PYTHON=${BACKEND_INSTALL_PYTHON}
        - INSTALL_REDIS_SERVER=${BACKEND_INSTALL_REDIS_SERVER}
        - NODE_VERSION=${BACKEND_NODE_VERSION}
        - NPM_REGISTRY=${BACKEND_NPM_REGISTRY}
        - PHP_VERSION=${PHP_VERSION}
        - PUID=${BACKEND_PUID}
        - PGID=${BACKEND_PGID}
        - TZ=${TIMEZONE}
        - USER=${COMPOSE_PROJECT_NAME}
    environment:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2375
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - "${BACKEND_SSH_PORT}:22"
    restart: "no"
    tty: true
    networks:
      - frontend
      - backend
    links:
      - docker-in-docker

  ### Redis ################################################

  redis:
    build:
      context: ./redis
      dockerfile: "Dockerfile"
    volumes:
      - ${DATA_PATH_HOST}/redis:/data${APP_CODE_CONTAINER_FLAG}
    ports:
      - "${REDIS_PORT}:6379"
    restart: "no"
    networks:
      - backend

  ### phpMyAdmin Container ####################################

  phpmyadmin:
    build: ./phpmyadmin
    environment:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      - PMA_ARBITRARY=0
      - PMA_HOST=mysql
      - MYSQL_USER=${PMA_USER}
      - MYSQL_PASSWORD=${PMA_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
    ports:
      - "${PMA_PORT}:80"
    restart: "no"
    deploy:
      resources:
        limits:
          memory: ${PMA_MEMORY_LIMIT}
    depends_on:
      - "${PMA_DB_ENGINE}"
    networks:
      - frontend
      - backend

  ### Composer Container #######################################

  composer:
    restart: 'no'
    image: "composer"
    command: "install --ignore-platform-reqs"
    volumes:
      - ${APP_CODE_PATH_HOST}:/app${APP_CODE_CONTAINER_FLAG}

  ### Docker-in-Docker ################################################

  docker-in-docker:
    image: docker:dind
    privileged: true
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    expose:
      - 2375
    networks:
      - backend
